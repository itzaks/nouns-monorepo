/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NounsDAOStorageV2,
  NounsDAOStorageV2Interface,
} from "../../../../contracts/governance/NounsDAOInterfaces.sol/NounsDAOStorageV2";

const _abi = [
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "latestProposalIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nouns",
    outputs: [
      {
        internalType: "contract NounsTokenLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingVetoer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThresholdBPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quorumParamsCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "minQuorumVotesBPS",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "maxQuorumVotesBPS",
            type: "uint16",
          },
          {
            internalType: "uint32",
            name: "quorumCoefficient",
            type: "uint32",
          },
        ],
        internalType: "struct NounsDAOStorageV2.DynamicQuorumParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumVotesBPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "contract INounsDAOExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vetoer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061031f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806383cce0e11161008c578063d33219b411610066578063d33219b4146101f7578063d8bff4401461020a578063da35c6641461021d578063f851a4401461022657600080fd5b806383cce0e11461018e578063a67d063514610197578063abb308b2146101aa57600080fd5b806326782247116100c857806326782247146101345780632de45f181461015f5780633932abb1146101725780635c60da1b1461017b57600080fd5b806302a251a3146100ef57806314a67ea41461010b57806317977c6114610114575b600080fd5b6100f860055481565b6040519081526020015b60405180910390f35b6100f860065481565b6100f86101223660046102a0565b600c6020526000908152604090205481565b600154610147906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b600a54610147906001600160a01b031681565b6100f860045481565b600254610147906001600160a01b031681565b6100f860075481565b600e54610147906001600160a01b031681565b6101bd6101b83660046102d0565b610239565b6040805163ffffffff9384168152825161ffff90811660208084019190915284015116818301529101519091166060820152608001610102565b600954610147906001600160a01b031681565b600354610147906001600160a01b031681565b6100f860085481565b600054610147906001600160a01b031681565b600d818154811061024957600080fd5b60009182526020918290206002919091020180546040805160608101825260019093015461ffff8082168552620100008204169484019490945263ffffffff64010000000090940484169083015291909116915082565b6000602082840312156102b257600080fd5b81356001600160a01b03811681146102c957600080fd5b9392505050565b6000602082840312156102e257600080fd5b503591905056fea26469706673582212209d0df1c2f9fc39af1c96d38bdf9c1c8d97113329ad1e67c856169f481d97724164736f6c63430008130033";

type NounsDAOStorageV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NounsDAOStorageV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NounsDAOStorageV2__factory extends ContractFactory {
  constructor(...args: NounsDAOStorageV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsDAOStorageV2> {
    return super.deploy(overrides || {}) as Promise<NounsDAOStorageV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NounsDAOStorageV2 {
    return super.attach(address) as NounsDAOStorageV2;
  }
  override connect(signer: Signer): NounsDAOStorageV2__factory {
    return super.connect(signer) as NounsDAOStorageV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NounsDAOStorageV2Interface {
    return new utils.Interface(_abi) as NounsDAOStorageV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsDAOStorageV2 {
    return new Contract(address, _abi, signerOrProvider) as NounsDAOStorageV2;
  }
}
